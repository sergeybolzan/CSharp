Тема: Обработка исключительных ситуаций.
Перегрузка операторов.

Задание 1.
    
Цель: Разработать программу, моделирующую танковый бой.  В танковом бою участвуют 5 танков «Т-34» и 5 танков «Pantera». Каждый танк («Т-34» и «Pantera») описываются параметрами: 
«Боекомплект»,  «Уровень брони», «Уровень маневренности». Значение данных параметров задаются случайными числами от 0 до 100. Каждый танк участвует в парной битве, 
т.е. первый танк «Т-34» сражается с первым танком «Pantera» и т.д. Победа присуждается тому танку, который превышает противника по двум и более параметрам из трех (пример: см. программу).  
Основное требование:  сражение (проверку на победу в бою) реализовать путем перегрузки оператора «^» ( или произведение).
1.	В решение добавить новый проект с именем «Day7(Tanks)», в котором будут промоделированы танковые сражения.   В данный проект добавить ссылку на библиотеку классов «MyClassLib».
2.	В библиотеке классов «MyClassLib» создать папку «WordOfTanks», а в ней  разработать класс с именем «Tank». 
В классе должно быть реализовано:
- поля:
закрытые поля, предназначенные для представления 
1. Названия танка. 
2. Уровня боекомплекта танка. 
3. Уровня брони.
4. Уровня маневренности.
-конструктор:
Конструктор с параметрами, обеспечивающий инициализацию всех полей класса Tank. При этом Боекомплект,  Уровень брони, Уровень маневренности инициализируются случайными числами от 0 до 100 %. 
Название танка передаются в конструктор из функции Main().
- перегрузка оператора «^»(или произведение):
При перегрузке оператора «^» (произведение) должна быть реализована проверка на победу в бою одного танка по отношению к другому. 
Критерий победы – победивший   танк должен превышать проигравший танк не менее чем по двум  из трех параметров (Боекомплект,  Уровень брони, Уровень маневренности). 
- методы:
Получение текущих значений параметров танка: Боекомплект,  Уровень брони, Уровень маневренности в виде строки.

Важно! При разработке программы использовать обработку исключительных ситуаций. Варианты возможных исключительных ситуаций рассмотреть самостоятельно!


Задание 2.
В С # индексация начинается с нуля, но в некоторых языках программирования это не так. Например, в Turbo Pascal индексация массиве начинается с 1. Напишите класс RangeOfArray, 
который  позволяет работать с массивом такого типа, в котором индексный диапазон устанавливается пользователем. Например, в диапазоне от 6 до 10, или от -9 до 15.
Подсказка:  В классе можно объявить две переменных, которые будут содержать верхний и нижний индекс допустимого диапазона.

Задание 3.
Задание: Написать приложение, имитирующее работу банкомата
Реализовать классы Bank, Client, Account в различных пространствах имен (общее пространство имен «Bankomat»). Изначально клиенту нужно открыть счёт в банке, получить номер счёта, получить свой пароль.
1.	Приложение предлагает ввести пароль предполагаемой кредитной карточки, даётся 3 попытки на правильный ввод пароля. Если попытки исчерпаны, приложение выдаёт соответствующее сообщение и завершается.
2.	При успешном вводе пароля выводится меню. Пользователь может выбрать одно из нескольких действий:
         - вывод баланса на экран
         - пополнение счёта
         - снять деньги со счёта
         - выход
3. Если пользователь выбирает вывод баланса на экран, приложение отображает состояние предполагаемого счёта, после чего предлагает либо вернуться в меню, либо совершить выход.
4. Если пользователь выбирает пополнение счёта, программа запрашивает сумму для пополнения и выполняет операцию, сопровождая её выводом соответствующего комментария. 
Затем следует предложение вернуться в меню или выполнить выход.
5. Если пользователь выбирает снять деньг со  счёта, программа запрашивает сумму. Если сумма превышает сумму счёта пользователя, программа выдаёт сообщение и переводит пользователя в меню. 
Иначе отображает сообщение о  том, что сумма снята со счёта и уменьшает сумму счёта на указанную величину.
